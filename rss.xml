<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQS</title><link>https://kelianf.github.io/</link><description>On a quest for understanding.</description><atom:link href="https://kelianf.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:kelianferhat@gmail.com"&gt;Kelian&lt;/a&gt; </copyright><lastBuildDate>Mon, 22 Nov 2021 13:44:32 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Starting an application with a specified number of core</title><link>https://kelianf.github.io/posts/starting-an-application-with-a-specified-number-of-core/</link><dc:creator>Kelian</dc:creator><description>&lt;p&gt;
Some programs cannot be run with more than x number of core, for power reasons or because of a specific license. This is the case of Q/KdB which has, with the free individual version, a maximum of 16 possible cores.
&lt;/p&gt;

&lt;p&gt;
In windows, the solution for this is the following command line:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;start /affinity 1 q.exe
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This will start q with only one core. The number of core is defined in hex number.
so, if we want 4 cores we have to select 'F', if we want 8 'FF' and finally 16 would be 'FFFF'.
&lt;/p&gt;</description><category>CompSci</category><guid>https://kelianf.github.io/posts/starting-an-application-with-a-specified-number-of-core/</guid><pubDate>Mon, 22 Nov 2021 13:34:12 GMT</pubDate></item><item><title>FX Series - Intro</title><link>https://kelianf.github.io/posts/fx-series-intro/</link><dc:creator>Kelian</dc:creator><description>&lt;p&gt;
This is the start of a series on FX, the goal is to have a top down approach of this asset class, starting with the History, structure and economy of this asset class, then later dive down the diffrerent instruments and strategies.
&lt;/p&gt;

&lt;div id="outline-container-org867034d" class="outline-2"&gt;
&lt;h2 id="org867034d"&gt;Introduction&lt;/h2&gt;
&lt;/div&gt;






&lt;div id="outline-container-orgb61b69b" class="outline-2"&gt;
&lt;h2 id="orgb61b69b"&gt;Reference&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb61b69b"&gt;
&lt;p&gt;
Shamah, S. 2008. A Foreign Exchange Primer.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>Finance</category><category>FX</category><guid>https://kelianf.github.io/posts/fx-series-intro/</guid><pubDate>Fri, 08 Oct 2021 07:35:52 GMT</pubDate></item><item><title>Computer Simulation: A Foundational Approach</title><link>https://kelianf.github.io/posts/computer-simulation-a-foundational-approach/</link><dc:creator>Kelian</dc:creator><description>&lt;p&gt;
The book is separated in Five parts: I. The Fundamentals, II. Managing Complexity, III. Problem Solving, IV. Scources of Randomness.
&lt;/p&gt;



&lt;div id="outline-container-org99d6798" class="outline-2"&gt;
&lt;h2 id="org99d6798"&gt;I. The Fundamentals&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org99d6798"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org078f948" class="outline-3"&gt;
&lt;h3 id="org078f948"&gt;Introduction&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org078f948"&gt;
&lt;p&gt;
So, what is a simulation? It is the process of representing a system by a model and then executing this model to generate raw data. The model is a conceptual representation of the system, an approximation. The raw data is also referred to as simulation data. 
&lt;/p&gt;

&lt;p&gt;
A simulation process can be divided in 6 steps:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;The problem description. When starting, a question should be gven to then find an answer.&lt;/li&gt;
&lt;li&gt;System description. It could be for example the different states and agents (to use a RL language)&lt;/li&gt;
&lt;li&gt;Model construction. This is an iterative process, in which the goal is to formulate a formal description of the system.&lt;/li&gt;
&lt;li&gt;Computer Program. Code it up.&lt;/li&gt;
&lt;li&gt;Statistical Analysis. Select relevant metrics and monitor them; for example Sharpe, VaR and Calmar Ratio in Finance.&lt;/li&gt;
&lt;li&gt;Performance Summary. Last part, the answer to the question with given confidence interval and conclusion as well as possible recommendations.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org89f0464" class="outline-3"&gt;
&lt;h3 id="org89f0464"&gt;Building Conceptual Model&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org89f0464"&gt;
&lt;p&gt;
A conceptual model is a representation of a system using specialized concepts and terms (e.g. a mathematical model for of a system is constructed using specialized concepts such as constants, variables, functions…). 
&lt;/p&gt;

&lt;p&gt;
A conceptual model can be constructed using five elements: 
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Entity, it represent the object in the system that must be explicitely captured in the model in order to be able to describe the overall operation of the system.&lt;/li&gt;
&lt;li&gt;Attributes, related to the entity (e.g. arrival time, weight, ..)&lt;/li&gt;
&lt;li&gt;State Variable, The state of the system under study is represented by a set of state variables, which each track a property of a static entity over time.&lt;/li&gt;
&lt;li&gt;Event, It represents the occurence of something interesting inside the system. It is a stimulus that cause the system to change its state.&lt;/li&gt;
&lt;li&gt;Activities, are the action performed by the system for a finite duration of time.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-orgd34018c" class="outline-3"&gt;
&lt;h3 id="orgd34018c"&gt;Simulation Probabilities&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd34018c"&gt;
&lt;p&gt;
A probability is a number between 0 and 1, inclusive. It is assigned to each possible outcome in the sample space of a random experiement. Probabilities must be assigned to outcomes in such a way that they add up to one. Then the probability of an event is is simply the sum of the proobabilities of the individual outcomes making up the event.
&lt;/p&gt;

&lt;p&gt;
The Axioms of Probability:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;∃ outcome w&lt;sub&gt;i&lt;/sub&gt; ∈ Ω, P(w&lt;sub&gt;i&lt;/sub&gt;) ∈ [0, 1],&lt;/li&gt;
&lt;li&gt;∀ Outcomes w&lt;sub&gt;i&lt;/sub&gt; ∈ Ω, ∑&lt;sub&gt;i&lt;/sub&gt; P(w&lt;sub&gt;i&lt;/sub&gt;) = 1,&lt;/li&gt;
&lt;li&gt;For each event E&lt;sub&gt;j&lt;/sub&gt; ⊂ Ω, P(E&lt;sub&gt;j&lt;/sub&gt;)=∑&lt;sub&gt;i&lt;/sub&gt; P(w&lt;sub&gt;i&lt;/sub&gt;), where w&lt;sub&gt;i&lt;/sub&gt; ∈ E&lt;sub&gt;j&lt;/sub&gt;,&lt;/li&gt;
&lt;li&gt;∀ Possible disjoint events E&lt;sub&gt;j&lt;/sub&gt; ⊂ Ω:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
$P({∪&lt;sub&gt;j&lt;/sub&gt; E&lt;sub&gt;j&lt;/sub&gt;}) = ∑&lt;sub&gt;j&lt;/sub&gt; P(E&lt;sub&gt;j&lt;/sub&gt;) $
&lt;/p&gt;


&lt;p&gt;
The Law of Large number 
&lt;/p&gt;

&lt;p&gt;
Let x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;, …, x&lt;sub&gt;n&lt;/sub&gt; be a set of sample (realization/outcomes of a random experiement), then with probability 1:
&lt;/p&gt;

&lt;p&gt;
&amp;lt;center&amp;gt;\(lim_{x\to\infty}\frac{x_1 + x_2 + ... + x_n}{n}\)&amp;lt;/center&amp;gt;
&lt;/p&gt;

&lt;p&gt;
converges to the population mean. That is, the running mean will eventually converge to the population mean.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org57e4195" class="outline-3"&gt;
&lt;h3 id="org57e4195"&gt;Simulating Random Variables and Stochastic Processes&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org57e4195"&gt;
&lt;p&gt;
A dynamic system can be viewed as either a sequence of random variables or a stochastic process.
In the former, the system evolves in discrete steps and its state changes at discrete instants of time.
In the latter, however, the system evolves continuously over time and the times at which events occur cannot be predicted.
Random variables are mathematical abstractions which are defined on the sample space of a random experiement. In other term, a random variable is a function which associate a probability whith each possible outcome of a random experiement.
&lt;/p&gt;



&lt;p&gt;
Probability Mass functions refers to the probability function for a discrete random variable. 
The PMF is defined as follow:
p&lt;sub&gt;X&lt;/sub&gt;(x) = P[X=x]I
t follows the two following properties:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;p&lt;sub&gt;X&lt;/sub&gt;(x) ≥ 0, and&lt;/li&gt;
&lt;li&gt;∑&lt;sub&gt;x&lt;/sub&gt; p&lt;sub&gt;X&lt;/sub&gt;(x) = 1&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;
Cumulative Distribution Function of a dicrete random variable X, denoted F&lt;sub&gt;X&lt;/sub&gt;(x), is defined as follow:
F&lt;sub&gt;X&lt;/sub&gt;(x)=P(X ≤ x)
     =∑&lt;sub&gt;(i≤ x)&lt;/sub&gt;P&lt;sub&gt;x&lt;/sub&gt;(i)
&lt;/p&gt;

&lt;p&gt;
Basically, the CDF gives the probability that the value of the random variable X is less than or equal to x. Thus, it is a monotonically non-decreasing function of X.
&lt;/p&gt;


&lt;p&gt;
Probability Density Function is the equivalent of PMF but for continous function. The PDF is a non-negative, continous function denoted by f&lt;sub&gt;X&lt;/sub&gt;(x).
Here is the relationship between PDF and CDF:
$ f&lt;sub&gt;X&lt;/sub&gt;(x) = \frac{d}{dx}F&lt;sub&gt;X&lt;/sub&gt;(x) $
$ F&lt;sub&gt;X&lt;/sub&gt;(x) = ∫&lt;sub&gt;-∞&lt;/sub&gt;^∞ f&lt;sub&gt;X&lt;/sub&gt;(x)dx
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3f73b7e" class="outline-4"&gt;
&lt;h4 id="org3f73b7e"&gt;Some Useful Random Variables&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3f73b7e"&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org0f5d3b4"&gt;&lt;/a&gt;Bernoulli&lt;br&gt;
&lt;div class="outline-text-5" id="text-org0f5d3b4"&gt;
&lt;p&gt;
Also called an Indicator Function. 
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;p,      if x = 1,&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
p&lt;sub&gt;X&lt;/sub&gt;(x) = | 
&lt;/p&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;1 - p,  if x = 0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
With the mean and variance as follow:
μ = p
σ&lt;sup&gt;2&lt;/sup&gt; = p(1-p)
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="orgf47df1d"&gt;&lt;/a&gt;Binomial&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgf47df1d"&gt;
&lt;p&gt;
The binomial random variable is an extension of the Bernoulli random variable, where the number of trials n is another parameter of the new random experiement. Basically, the Bernoulli experiement (or trial) is repeated n times.
&lt;/p&gt;

&lt;p&gt;
p&lt;sub&gt;X&lt;/sub&gt;(x) = (&lt;sup&gt;n&lt;/sup&gt;&lt;sub&gt;x&lt;/sub&gt;)p&lt;sup&gt;x&lt;/sup&gt;(1-p)&lt;sup&gt;(n-x)&lt;/sup&gt;
&lt;/p&gt;

&lt;p&gt;
With respective mean and variance:
μ = np
σ&lt;sup&gt;2&lt;/sup&gt; = np(1-p)
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org0b1d63b"&gt;&lt;/a&gt;Geometric&lt;br&gt;
&lt;div class="outline-text-5" id="text-org0b1d63b"&gt;
&lt;p&gt;
The random experiment of repeating a Bernoulli trial until the first success is observed is modeled by a geometric random variable. This random variable can also be defined as the number of failure until the first success occurs.
The PMF for a geometric random variable is the following:
p&lt;sub&gt;X&lt;/sub&gt;(x) = p(1-p)&lt;sup&gt;x&lt;/sup&gt;
where p is the probability of sucess in a single Bernoulli trial and x ∈ {0, 1, 2, 3, …}.
With:
$ μ = \frac{1-p}{p} $
$ σ&lt;sup&gt;2&lt;/sup&gt; = \frac{1-p}{p^2}
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org2e9baa5"&gt;&lt;/a&gt;Poisson&lt;br&gt;
&lt;div class="outline-text-5" id="text-org2e9baa5"&gt;
&lt;p&gt;
A Poisson random variable X is a discrete random variable which has the following probability mass function:
$ P(X=x) = \frac{\lambda^x. e^-\lambda}{x!} $
Where P(X=x) is the probability of x events occurring in an interval of preset length and λ is the expected number of events occuring in the same interval.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="orgdc8d9cf"&gt;&lt;/a&gt;Uniform&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgdc8d9cf"&gt;
&lt;p&gt;
A uniform random variable X is a continuous random variable that has the following cumulative distribution function:
$ F(x) = \frac{x-a}{b-a} $
&lt;/p&gt;

&lt;p&gt;
The Probability density function is:
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;1/(b-a) , for  x ∈ [a, b]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
f&lt;sub&gt;X&lt;/sub&gt;(x) = |
&lt;/p&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;0, otherwise&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
The mean and variance are:
$ μ = \frac{1}{2}(a + b) $
$ σ&lt;sup&gt;2&lt;/sup&gt; = \frac{1}{12}(b - a)&lt;sup&gt;2&lt;/sup&gt; $
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org6c70aee"&gt;&lt;/a&gt;Exponential&lt;br&gt;
&lt;div class="outline-text-5" id="text-org6c70aee"&gt;
&lt;p&gt;
An exponential random variable is a continuous random variable which has the following cumulative distribution function:
$ F&lt;sub&gt;X&lt;/sub&gt;(x) = 1 - e&lt;sup&gt;-μλ&lt;/sup&gt; $
whilst the PDF is given by:
$ f&lt;sub&gt;X&lt;/sub&gt;(x) = μ.e&lt;sup&gt;(-μ x)&lt;/sup&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;


&lt;li&gt;&lt;a id="orgacccdfd"&gt;&lt;/a&gt;Erlan&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgacccdfd"&gt;
&lt;p&gt;
The Erlang random variable is continuous. It can be expressed as a sum of exponential random variables. This random variable has two parameters:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;θ: Scale or rate, and&lt;/li&gt;
&lt;li&gt;κ: Shape&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The PDF:
$ f(x) = \frac{x^(k-1)\theta^ke^(-\theta.x)}{(k-1)!}  ; x≥0 $
&lt;/p&gt;

&lt;p&gt;
The CDF:
$ F(x) = 1 - e&lt;sup&gt;(-θ.x)&lt;/sup&gt; ∑&lt;sub&gt;(j=0)&lt;/sub&gt;&lt;sup&gt;(k-1)&lt;/sup&gt; \frac{(\theta.x)^j}{j!} $
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="orgc4ab55b"&gt;&lt;/a&gt;Normal&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgc4ab55b"&gt;
&lt;p&gt;
The normal (or Gaussian) random variable is a continous random variable that has the following probability density function:
$ f(x) = \frac{1}{\sigma.(2\pi)^(1/2)}.e&lt;sup&gt;(\frac{-(x-\mu)^2}{2\sigma^2})&lt;/sup&gt; $
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="orgbaf2fdb"&gt;&lt;/a&gt;Triangular&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgbaf2fdb"&gt;
&lt;p&gt;
The triangular random variable has three parameters: a, b and c. The last parameter is referred to as the mode.
&lt;/p&gt;

&lt;p&gt;
The CDF:
F&lt;sub&gt;X&lt;/sub&gt;(x) = 
0, if x ≤ a,
$\frac{(x-a)^2}{(b-a)(c-a)} $ , if a &amp;lt; x ≤ c,
$ 1 - \frac{(b-x)^2}{(b-a)(b-c)}$ , if c &amp;lt; x &amp;lt; b
1 , if x ≥ b
&lt;/p&gt;

&lt;p&gt;
The PDF :
f&lt;sub&gt;X&lt;/sub&gt;(x) = 
0 if x &amp;lt; a
$ \frac{2(x-a)}{(b-a)(c-a)} $ , if a ≤ x &amp;lt; c
$ \frac{2}{b-a} $ if x = c
$ \frac{2(b-x)}{(b-a)(b-c)} $ , if c &amp;lt; x ≤ b
0 if x &amp;gt; b
&lt;/p&gt;

&lt;p&gt;
The mean and variance are:
$ μ = \frac{a + b + c}{3} $
$ σ = \frac{a^2 + b^2 + c^2 - ab - ac - bc}{18}
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;


&lt;div id="outline-container-org11bab2b" class="outline-4"&gt;
&lt;h4 id="org11bab2b"&gt;Stochastic Processes and dynamic systems&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org11bab2b"&gt;
&lt;p&gt;
A random variable cannot be used to describe the behaviour of a dynamic system since it does not involve time. Enter the world of stochastic processes. At every instant in time, the state of the process is random. Since time is fixed, we can thinkk of the state of the process as a random variable at that specific instant.
&lt;/p&gt;

&lt;p&gt;
Ergodic system: IF a dynamic system is run for a long perios of time, then each possible system state would be visited. Then, the mean over the state space (i.e. ensemble mean) can be approximated by the mean of a sample path through the state space (i.e. temporal space). Such dynamic systems are referred to as ergodic system, wherein the temporal mean converges to the ensemble mean.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org88fa426" class="outline-4"&gt;
&lt;h4 id="org88fa426"&gt;Simulating Queueing processes&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org88fa426"&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org72211d9"&gt;&lt;/a&gt;Discrete-time Markov Chains&lt;br&gt;
&lt;div class="outline-text-5" id="text-org72211d9"&gt;
&lt;p&gt;
A discrete-time Markov chain stays in any state for an amount of time which is geometrically distributed. A Markov Chain is said to be fully characterized if its probability transition matrix is known. 
An entry P&lt;sub&gt;ij&lt;/sub&gt; in this matrix represents the probability that the process will make a transition from state i to state j, where i is the present state and j is the next state. 
Consider a Discrete-Time MArkov Chain with two states: Good (G) and Bad (B). Let the transition Matrix of this DMTC be the following:
&lt;/p&gt;

&lt;p&gt;
P(i, j) = \bordermatrix{ &amp;amp; G &amp;amp; B \cr
G &amp;amp; .5 &amp;amp; .5 \cr
B &amp;amp; .7 &amp;amp; .3 \qquad
&lt;/p&gt;

&lt;p&gt;
Noticing that every row and colun is labeled. This matrixx is an example of the classical Gilbert-Elliot two-state wireless channel model.
&lt;/p&gt;

&lt;p&gt;
Given that the present state is X&lt;sub&gt;n&lt;/sub&gt; = G, the next state X&lt;sub&gt;(n+1)&lt;/sub&gt; has the following PMF:
P(X&lt;sub&gt;(n+1)&lt;/sub&gt; = G  X&lt;sub&gt;n&lt;/sub&gt; = G) = .5; P(X&lt;sub&gt;(n+1)&lt;/sub&gt;=B | X&lt;sub&gt;n&lt;/sub&gt; = G) = .5
and assuming that X&lt;sub&gt;n&lt;/sub&gt; = B then the next state X&lt;sub&gt;(n+1)&lt;/sub&gt; has the following PMF:
P(X&lt;sub&gt;(n+1)&lt;/sub&gt; = G | X&lt;sub&gt;n&lt;/sub&gt; = B) = .7; P(X&lt;sub&gt;(n+1)&lt;/sub&gt; = B | X&lt;sub&gt;n&lt;/sub&gt; = G) = .3
&lt;/p&gt;

&lt;p&gt;
Since we know the PMF for the next state given any present state, we can now simulate the DTMC.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;


&lt;li&gt;&lt;a id="org21264c8"&gt;&lt;/a&gt;Continuous-time Markov Chain&lt;br&gt;
&lt;div class="outline-text-5" id="text-org21264c8"&gt;
&lt;p&gt;
When a continuous-time Markov chain enters a state, it remains in the state for an amount of time exponentially distributed.
&lt;/p&gt;




&lt;p&gt;
A Poisson process is an example of a Continous-Time Markov Chain. The time between two consecutive events is called the Inter-Arrival Time (IAT). The random variable IAT has an exponential distribution. Only one kind of event triggers a transition inside a Poisson process, this event is the arrival event. 
&lt;/p&gt;

&lt;p&gt;
The Poisson Process is a special case of another type of random processes called Birth-Date Processes. In a BD Process, two events occur: Birth and Death. The Poisson process is a pure Birth process, since the Birth (i.e. arrival) event occurs only. The state of a BD process changes at random points of time. The state variable is incremented by only one when a birth event occurs. it is decremented by one, on the other hand, when a Death occurs. The time until the next birth is exponenetially distributed with rate λ. Similarly, the time until the next death is exponentially distributed with a rate μ.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org733f474" class="outline-3"&gt;
&lt;h3 id="org733f474"&gt;Simulating the Single-Server Queueing System&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org733f474"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgdc52beb" class="outline-4"&gt;
&lt;h4 id="orgdc52beb"&gt;Simulation Model&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgdc52beb"&gt;
&lt;p&gt;
A single server queuing system is composed of four components: Source, Buffer, Server and Sink.
The Source generates packets which go into a FIFO buffer, the server fethes the packets from the buffer and then deliers them to the sink after they are processed.
Since the individual inter-arrival times and service times are unpredictable, they shoul be modelled as random variables. Thus we need to specify the probability distribution of these random variables. The choice of a specific probability distribution has to be supported by an evidence that it is appropriate. The exponential probability distribution is a reasonable model of the inter-arrival and service time.
&lt;/p&gt;

&lt;p&gt;
What cause Delay?
→ When multiple packets contend for one server, some packets will be queued and system performance suffers. If the service time is always less than or equal to the inter-arrival time, no packet is queued. In reality, however, the service time and inter-arrival times are not constant. Also, packets may require different service times. This variability in service times and inter arrival times causes the delay through the single-server queueing system.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org65d66b2" class="outline-4"&gt;
&lt;h4 id="org65d66b2"&gt;Performance Laws&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org65d66b2"&gt;
&lt;p&gt;
Throughput, it measures how many packets the system can process in one time unitl. It is defined as the ratio of the number of departure divided by the total simulation time. Mathematically, this law can be written as follow:
$ τ = \frac{D}{T} $
&lt;/p&gt;

&lt;p&gt;
Utization, ro server utilization, is the proportion of simulation time during which the server is busy. It is the product of its throughput and the average service time per customer. This can be mathematically be expressed as follows:
U = τ . T&lt;sub&gt;s&lt;/sub&gt;
Where T&lt;sub&gt;s&lt;/sub&gt; is the average service time per customer and it is defined as follows:
$ T&lt;sub&gt;s&lt;/sub&gt; = \frac{B}{D} $
&lt;/p&gt;

&lt;p&gt;
Where B is the total server busy time which can be computed as follows:
B = ∑&lt;sub&gt;(i=1)&lt;/sub&gt;&lt;sup&gt;D&lt;/sup&gt; T&lt;sub&gt;i&lt;/sub&gt;
Where T&lt;sub&gt;i&lt;/sub&gt; is the service time for customer i.
&lt;/p&gt;

&lt;p&gt;
Response Time, it is the total time a customer spends in the system. This includes waiting time and service time. it is defined as:
$ W = \frac{\sum_(i=1)^D W_i}{D} $
As a consequence the average number of packets in the system can be computed as follows:
L = τ . W
&lt;/p&gt;

&lt;p&gt;
Little's Laws
L = λ . W
This law asserts that the time average number of packets in the system is the product of the arrival rate and the response time. This law is due to Little Who proved it in 1961. With λ is a parameter of the arrival Poisson process.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9749695" class="outline-4"&gt;
&lt;h4 id="org9749695"&gt;E[N(t)]&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9749695"&gt;
&lt;p&gt;
The state variable N(t) represents the number of packets in the system at time t. 
In the previous section we saw that Little's Law can be used to compute the average number of customers in the system (i.e. E[N(t)]). This quantity can be directly computed by using one sample path of N(t) as follow.
&lt;/p&gt;

&lt;p&gt;
$ E[N(t)] = \frac{1}{T} . ∫&lt;sub&gt;0&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt; N(t) $
Where T is the total simulation time.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6883bd7" class="outline-4"&gt;
&lt;h4 id="org6883bd7"&gt;P[N]&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org6883bd7"&gt;
&lt;p&gt;
P[N = k] is the probability that there are exactly k packets in the system. In order to estimate this probability, we sum up all time intervals during which there are exactly k packets in the system. Then, the sum is divided by the total simulation time. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org71ad6aa" class="outline-4"&gt;
&lt;h4 id="org71ad6aa"&gt;Transcient and steady phase&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org71ad6aa"&gt;
&lt;p&gt;
A simulation goes through two phases: transcient and steady. 
In the transcient phase, the values of the output variable vary dramatically. They are significantly different from the theoretical values computed using standard queueing theory formulas. Output variables fluctuate during the transcient phase due to the effect of the initial state of the simulation model.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;div id="outline-container-org28239dd" class="outline-3"&gt;
&lt;h3 id="org28239dd"&gt;Statistical Analysis of Simulated Data&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org28239dd"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org95180b2" class="outline-4"&gt;
&lt;h4 id="org95180b2"&gt;Population and Samples&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org95180b2"&gt;
&lt;p&gt;
Sample Mean:
$ \bar{x} = \frac{1}{n} ∑&lt;sub&gt;(i=1)&lt;/sub&gt;&lt;sup&gt;n&lt;/sup&gt; X&lt;sub&gt;i&lt;/sub&gt; $
&lt;/p&gt;

&lt;p&gt;
Sample Variance:
$ S&lt;sup&gt;2&lt;/sup&gt; = \frac{1}{1 - n} ∑&lt;sub&gt;(i=1)&lt;/sub&gt;&lt;sup&gt;n&lt;/sup&gt;(X&lt;sub&gt;i&lt;/sub&gt; - \bar{x})&lt;sup&gt;2&lt;/sup&gt; $
&lt;/p&gt;

&lt;p&gt;
Sample standard deviation:
$ S = \sqrt{S^2} $
&lt;/p&gt;

&lt;p&gt;
The notation for sample and population statistic is as follow:
Mean: $ \bar{X} $ (Sample), μ (Population)
Variance: S&lt;sup&gt;2&lt;/sup&gt; (Sample), σ&lt;sup&gt;2&lt;/sup&gt; (Population)
Standard Deviation: S (Sample), σ (Poupulation)
&lt;/p&gt;

&lt;p&gt;
 &lt;b&gt;*&lt;/b&gt; Central Limit Theorem
Regardless of the probability distribution of the population mean, the probability distribution of the sample mean is always normal. The mean of this normal distribution is the theoretical mean and the standard deviation is the standard error.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org24221ab" class="outline-4"&gt;
&lt;h4 id="org24221ab"&gt;Confidence interval&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org24221ab"&gt;
&lt;p&gt;
A ((1 - α) . 100)% confidence interval for a population mean μ is given by:
&lt;/p&gt;

&lt;p&gt;
$ \bar{x} ± t . \frac{x}{sqrt{n}} $
&lt;/p&gt;

&lt;p&gt;
with:
t is a random variable that has a student-t distribution with (n - 1) degrees of freedom.
\(\bar{x}\) is the sample mean
s is the sample standard deviation
n is the sample size
1- α is the confidence level
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org1ce6975" class="outline-2"&gt;
&lt;h2 id="org1ce6975"&gt;II. Managing Complexity&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1ce6975"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org632694e" class="outline-3"&gt;
&lt;h3 id="org632694e"&gt;Event Graph&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org632694e"&gt;
&lt;p&gt;
George Box: "All models are wrong, but some are useful."
&lt;/p&gt;

&lt;p&gt;
Event graphs are a formal modeling tool which can be used for building discrete-event simulation models. It shows the scheduling relationships between events which occur inside the sytem. An event graph is constructed using vertices and directed edges with attributes and conditions. 
&lt;/p&gt;

&lt;p&gt;
Translating event graphs into code is the main part of this category. The propozed high-level concepts will help in mechanizing the translation process and enhancing the maintainability of the resulting code.
These high level processes are the following:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Event type&lt;/li&gt;
&lt;li&gt;Event generator&lt;/li&gt;
&lt;li&gt;Event handler&lt;/li&gt;
&lt;li&gt;Initial event&lt;/li&gt;
&lt;li&gt;Simulation loop&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
An event type is the base concept and it includes two subconcepts: event generator and event handler. The event generator is an abstraction of a block of code which returns a realization of an event type.
On the other hand an event handler is an abstraction of a block of codewhich updates the state of the simulation model in response to an event. Two tasks are performed inside the handler: 1. Updating state variables and 2. Scheduling next events. After an event is fully executed, coontrol is returned to the main simulation loop.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org27d3170" class="outline-3"&gt;
&lt;h3 id="org27d3170"&gt;Building Simulation Programs&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org27d3170"&gt;
&lt;p&gt;
Simulation programs are either time-driven or event-driven. In both cases the state of the simulation model is updated at discrete points in time.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org52dd0a3" class="outline-4"&gt;
&lt;h4 id="org52dd0a3"&gt;Time-Driven Simulation&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org52dd0a3"&gt;
&lt;p&gt;
This simulation approach is also reffered to as discrete-time simulation. The reason for this name is because the simulation evolves in discrete steps, slots, of size Δ.t.
&lt;/p&gt;

&lt;p&gt;
The single-server queueing system can be modeled in two ways: discrete-time and continuous-time. In discrrete-time queues, time evolves in discrete steps of the same size. On the other hand, in continous time queues, events can occur at any point on the time line.
Continous time uses Poisson Distribution for Arrival and Departure Processes and  Exponential for Inter-Arrival and service times; whilst Discrete-time uses Bernoulli for Arrival and Derparture and Geometric for Inter-arrival and Service Times.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc4effdc" class="outline-4"&gt;
&lt;h4 id="orgc4effdc"&gt;Event-Driven Simulation&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgc4effdc"&gt;
&lt;p&gt;
This approach to simulation is also called discrete-event suimulation. In this type of simulation, time evolves in discrete steps of random sizes. Hence, events happen at random point on the time line. Also, the time between two consecutive events is random.
An event driven simulation program consists of two components: simulator and model. Events are generated by the model, they are applied back to the model by the simulator. The simulator is responsible for maintaining the temporal order of events using the event list. It is also responsible for keeping the current simulated time up to date. 
The simulator contains a Random Number Generator, which generate random numbers which are then used to drive the Random Variate Generator. 
It follows:
Seed → Random Number Generator → Random Variate Generator → Random Event Generator → Event
&lt;/p&gt;

&lt;p&gt;
A Flowchart of the event-driven simulation can be separated in 4 components:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Initialization:&lt;/li&gt;
&lt;li&gt;Simulation Parameters&lt;/li&gt;
&lt;li&gt;State Variables&lt;/li&gt;
&lt;li&gt;Output variable- Event list&lt;/li&gt;
&lt;li&gt;clock = 0&lt;/li&gt;

&lt;li&gt;Simulation loop&lt;/li&gt;
&lt;li&gt;EV = EventList.nextEvent()&lt;/li&gt;
&lt;li&gt;clock = ev.Time&lt;/li&gt;
&lt;li&gt;ev.EventHandler( clock )&lt;/li&gt;

&lt;li&gt;Event Handler for event type 1:&lt;/li&gt;
&lt;li&gt;Update state and output variables&lt;/li&gt;
&lt;li&gt;Generate and schedule new events&lt;/li&gt;

&lt;li&gt;Output:&lt;/li&gt;
&lt;li&gt;Compute performance estimates using output variables&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
Several programming issues arise when writing event-driven simulation programs. Below are 3 of the most critical:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Event Collision: An event is represented by a tuple inside each event generator. When inserted into the event list, the field in the tuple is used as a key for sorting the event. When two events have the same key, an event collision is said to have happened.&lt;/li&gt;
&lt;li&gt;Identifiers for Packets: When recording data in output variables, the order of packets must be maintained. That is, the i&lt;sup&gt;th&lt;/sup&gt; entry in any output variable must correspond to the i&lt;sup&gt;th&lt;/sup&gt; simulated packet. If this order is not maintained, the final statistical results will be wrong.&lt;/li&gt;
&lt;li&gt;Stopping condition for the simulated loop: There are several options to terminate a simulation loop. 1. Event List becomes empty, 2. Number of simulated packet reaches a preset value, and 3. Maximum allowed simulation time is reached.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;




&lt;div id="outline-container-org0b402b9" class="outline-2"&gt;
&lt;h2 id="org0b402b9"&gt;III. Problem-Solving&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0b402b9"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf60e693" class="outline-3"&gt;
&lt;h3 id="orgf60e693"&gt;The Monte Carlo Method&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf60e693"&gt;
&lt;p&gt;
The Monte Carlo (MC) method was born during the second world war. It was used in simulation of atommic collisions which then resulted in the first atomic bomb.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org90de7ef" class="outline-4"&gt;
&lt;h4 id="org90de7ef"&gt;Estimating the value of π&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org90de7ef"&gt;
&lt;p&gt;
The MC Method can be used to estimate the value of a pareter or constant. For example it can be used to estimate the value of π, which is the ratio of the cirumference of a circle to its diameter; π is approximately equal to 3.14159.
Consider a full circle with radius r and a centered at the origin. This circle is also enclosed inside a square with an edge length of 2r. A point (x, y) falls inside the circle if the following inequality is satisfied:
x&lt;sup&gt;2&lt;/sup&gt; + y&lt;sup&gt;2&lt;/sup&gt; ≤ r&lt;sup&gt;2&lt;/sup&gt;
Both x and y takes values from the interval [-1, 1]. r has fixed value of 1.
Having a Circle (C) in a Square (S), the probability that a point (x, y) lies inside C is given by:
$ P[(x, y) ∈ C] = \frac{measure of C}{measure of S} $
$ = \frac{area of C}{area of S} $
$ = \frac{\pi.r^2}{4r^2} $
$ =\frac{\pi}{4} $
&lt;/p&gt;

&lt;p&gt;
Hence the following equation for π can be deduced:
π = 4.P
Now we have the expression for π but need to find P, the probability of having a point inside C vs S.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7471a60" class="outline-4"&gt;
&lt;h4 id="org7471a60"&gt;Numerical Integration&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7471a60"&gt;
&lt;p&gt;
Let a function f(x)defined over the interval [a, b]. The function f(x) is also enclosed inside a rectangle with width b-a and height c. The curve of f(x) divides the rectangle in two regions I, below f(x), and J above. The area under the curve, I is defined as:
$ A&lt;sub&gt;I&lt;/sub&gt; = ∫&lt;sub&gt;a&lt;/sub&gt;&lt;sup&gt;b&lt;/sup&gt; f(x)dx $
The probability that a randomly generated point falls inside region I can be computed as follows:
$ P = \frac{A_I}{A_J} $
where the area of region J is equal to A&lt;sub&gt;J&lt;/sub&gt; = c . (b - a).
Hence the integral can be estimated using the following estimator:
A&lt;sub&gt;I&lt;/sub&gt; = P.[(b-a).c]
P=E[Z]
$ ≈ \frac{1}{N}∑&lt;sup&gt;N&lt;/sup&gt; Z&lt;sub&gt;i&lt;/sub&gt; $
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org61f300e" class="outline-4"&gt;
&lt;h4 id="org61f300e"&gt;Estimating Probabilities: Buffon's needle problem&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org61f300e"&gt;
&lt;p&gt;
In this problem, a needle of length l is dropped onto a floor with equally spaced horizontal lines, the distance between every consecutive lines is d. The length of the needle is constrain such that l ≤ d. The goal is to estimate the probability that the needle touches or intersect a line.
The simulation makes use of 2 random variables which uniquely identify the location of the needle on the floor. The two random variables are the following:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;α: distance from the midpoint of the needle to the closest horizontal line (α ∈ [0, d/2])&lt;/li&gt;
&lt;li&gt;Θ: Angle the needle makes with the  closest line (Θ ∈ [0, π])&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Clearly the needle will intersect a line if a ≤ b. 
The exact ecpression for the probability is the following:
$ P = \frac{2l}{\pi.d} $
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org94a4fcf" class="outline-4"&gt;
&lt;h4 id="org94a4fcf"&gt;Reliability&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org94a4fcf"&gt;
&lt;p&gt;
Consider blocks in which the input is connected to the output if the switch is closed. The probability of this event (closed switch) correspond to the portion of time the block is working.
The state of the system is a set of three random variable (b&lt;sub&gt;1&lt;/sub&gt;, b&lt;sub&gt;2&lt;/sub&gt;, b&lt;sub&gt;3&lt;/sub&gt;) where each random variable corresponds to the state of an individual block in the system.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org29e9de4" class="outline-4"&gt;
&lt;h4 id="org29e9de4"&gt;Variance reduction technique&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org29e9de4"&gt;
&lt;p&gt;
Advanced methods of Monte Carlo can help achieving higher level of accuracy. It can also be ised to estimate probabilities of rare events by changing the probability of distribution of the event of interest.
&lt;/p&gt;
&lt;/div&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="orgb0793d8"&gt;&lt;/a&gt;Control variates&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgb0793d8"&gt;
&lt;p&gt;
Consider a random variable X whose expected value E[X] is to be estimated. Assume there is another random variable Y whose expected value is E[Y] is known. Then, the following is an estimator of E[X]:
$ E[X] = \frac{1}{n}∑&lt;sup&gt;n&lt;/sup&gt; X&lt;sub&gt;i&lt;/sub&gt;-c(\frac{1}{n}∑&lt;sup&gt;n&lt;/sup&gt; Y&lt;sub&gt;i&lt;/sub&gt;-E[Y]) $
where c is a constant whch can be estimated using the samples (X, Y) as follows:
$ c = \frac{∑&lt;sup&gt;n&lt;/sup&gt; (X&lt;sub&gt;i&lt;/sub&gt; - \overline{X})(Y&lt;sub&gt;i&lt;/sub&gt; - \bar{Y})}{∑&lt;sup&gt;n&lt;/sup&gt; (Y&lt;sub&gt;i&lt;/sub&gt; - \overline{Y})} $
&lt;/p&gt;

&lt;p&gt;
It has to be noted that n → ∞ ; \(\frac{1}{n}\sum^n Y_i\) → E[Y]
Hence, the second term evaluates to zero. However since the number of samples is finite, the samples of Y are going to reduce the variance in the estimator of E[X]. The result is an estimator that is better than using only Monte Carlo.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="orgfe07d5e"&gt;&lt;/a&gt;Stratified Sampling&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgfe07d5e"&gt;
&lt;p&gt;
In this sampling technique the goal is to stratify samples into groups and then a sample is randomly generated from each group. This way, samples are spread appropriately across the state space.
Hence in order to estimate the expected value of a function f(x), the sample space of the random variable X is partitioned into K subsets.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;


&lt;li&gt;&lt;a id="org973bb94"&gt;&lt;/a&gt;Antithetic Sampling&lt;br&gt;
&lt;div class="outline-text-5" id="text-org973bb94"&gt;
&lt;p&gt;
A random variate v has an antithetic value (or variate) that is represented by v'. if v is a random variate uniformly distributed on [a, b], then its antithetic variate is given by:
v' = a + b - v
The essence of the antithetic sampling technique is to replace each sample s by another one which can be calculated as follow:
$ s* = \frac{v + v'}{2} $
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;


&lt;li&gt;&lt;a id="org905b562"&gt;&lt;/a&gt;Dagger Sampling&lt;br&gt;
&lt;div class="outline-text-5" id="text-org905b562"&gt;
&lt;p&gt;
In dagger sampling, multiple samples can be generated using a single random number. 
Dagger sampling works as follow: The interval [0, 1] is divided into S subinterval. The length of each subinterval is p. if the random value falls on the second interval, the overall sample would be [0, 1, 0] or [T, H, T] in the case of a coin flip.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org07cb9a7"&gt;&lt;/a&gt;Importance Sampling&lt;br&gt;
&lt;div class="outline-text-5" id="text-org07cb9a7"&gt;
&lt;p&gt;
in Importance sampling, samples are generated using a new probability distribution q that is more appropriate than the original probability distribution p.
However, since the new probability distribution q is different from the correct distribution p, a correction step is necessary.
Imagine a distribution in which region 2  will be generated more frequently because of the large porbabilities over this region. However, the values of the function in region 1 are more important. How is it possible to sample more from that regions? Thi is the reason this method is reffered to as importance sampling. Since Values sampled from region 1 have more impact, they should be sampled more frequently. So the correction step is very simple, every sample generated using q(x) is multiplied by a weight w(x)= p(x)/q(x) to account for the importance weight.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;




&lt;div id="outline-container-org29ffa29" class="outline-2"&gt;
&lt;h2 id="org29ffa29"&gt;IV. Source of Randomness&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org29ffa29"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb388f0e" class="outline-3"&gt;
&lt;h3 id="orgb388f0e"&gt;Random Variate Generation&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb388f0e"&gt;
&lt;p&gt;
Here we look at generating random variates from probability distribution.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org87bd99e" class="outline-4"&gt;
&lt;h4 id="org87bd99e"&gt;The Inversion Method&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org87bd99e"&gt;
&lt;p&gt;
Rembembering that a randon variable is a function that takes as an input a numerical value and returns a probability. If this function is inverset, we get a function that takes a probability and returns a numerical value. 
For this to work, invertinga CDF of an exponentional random variable for example, hs to give exactly only one number on the x-axis. On the other hand, the inversion method works differently on discrete random variables. In that case the relationship is many-to-one, that is multiple random numbers can be mapped onto one random variate.
Finally it should be emphasized that only CDFs of continous random variables and PMF of discrete random variables can be inversed. This is because these two functions are actual probability functions. The PDF of a continous random variable is a not a probability function since it can take values greater than one.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org4f96a1f" class="outline-4"&gt;
&lt;h4 id="org4f96a1f"&gt;The rejection method&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org4f96a1f"&gt;
&lt;p&gt;
The inversion method fails if you do not have a closed-form expression for the CDF. it can stilll be possible to approcximate the CDF but this requires a significant amount of computational time. 
Because of these two reasons, the rejection method was invented.
In this method, the PDF of the random variable is used instead of the CDF. 
In this method, x is randomly assigned a value from its set of vlues. Then a uniform number is generated and then used in the comparison.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0b629a9" class="outline-4"&gt;
&lt;h4 id="org0b629a9"&gt;The Composition Method&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org0b629a9"&gt;
&lt;p&gt;
An interesting fact is that the linear combination of CDFs, PDFs, or PMFs is also a CFD, PDF or PMF, repsectively. The only requirement is that the weights used in the combinations should add up to one. Hence, a probability distribution can be represented as a mixture of simpler probability distribution functions.
The Composition Method works as follows. First, the probability function is decomposed into a weighted sum of K simpler probability functions.
Secondly, one of the probability distribution that appear in the composition is randomly selected. f&lt;sub&gt;i&lt;/sub&gt; is selected with probability p&lt;sub&gt;i&lt;/sub&gt;. Finally, a sample is generated using the selected probability distribution function by using either the inversion or rejection method.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org27022e5" class="outline-4"&gt;
&lt;h4 id="org27022e5"&gt;The convolution method&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org27022e5"&gt;
&lt;p&gt;
Consider a random variable Y whose probability distributon is complex and thus it is not possible to sample from it. However, this random variable can be expressed as a sum of K random variables whose probability distribution can be different but they are easy to sample from. in this case, the convolution method can be used to generate samples of Y.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org122ebc7" class="outline-4"&gt;
&lt;h4 id="org122ebc7"&gt;Specialized methods&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org122ebc7"&gt;
&lt;p&gt;
The Poisson distribution is typically used to model the arrivals in a communication system. 
The Normal distribution is another methods which can be used for this.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd6de3c6" class="outline-3"&gt;
&lt;h3 id="orgd6de3c6"&gt;Random Number Generation&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd6de3c6"&gt;
&lt;p&gt;
Random numbers are usind in the generation of random variates. A random number u is uniformly distributed between 0 and 1.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc84575c" class="outline-4"&gt;
&lt;h4 id="orgc84575c"&gt;Pseudo-random&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgc84575c"&gt;
&lt;p&gt;
Random Numbers generated by a random number generator must follow a uniform distribution. In addition it must have the following charateristics:
mean = 1/2
Variance = 1/12
Expectation of the autocorrelation = 1/4
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org17bf02e" class="outline-4"&gt;
&lt;h4 id="org17bf02e"&gt;Characteristic of a good generator&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org17bf02e"&gt;
&lt;p&gt;
RNGs are the main source of randomness in simulation programs. They are actually programs whose behaviour is deterministic. Once its initial state (called the seed) is set, a RNG produces a deterministic and periodic sequence of numbers. This is why they are called pseudo-random. 
Other deisred characteristic of a good RNG are uniformity and independence.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfaba09b" class="outline-4"&gt;
&lt;h4 id="orgfaba09b"&gt;A Bit of Number Theory&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgfaba09b"&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org5101d1a"&gt;&lt;/a&gt;Prime numbers&lt;br&gt;
&lt;div class="outline-text-5" id="text-org5101d1a"&gt;
&lt;p&gt;
A Prime number is a positive integer that is greater than one and has two divisor only: one and itself.
3, 5, 7, 11, 13, 17, 19, 23, …
Prime numbers are crucial in random number generation. Parameters of RNG algorithms are often recommended to be large prime numbers.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org9287b0f"&gt;&lt;/a&gt;The modulo operator&lt;br&gt;
&lt;div class="outline-text-5" id="text-org9287b0f"&gt;
&lt;p&gt;
The modulo operation finds the remainder of the division of one integer number by another. 
The modulo is computed as follow:
m = a - floor(a/b) * b
where b &amp;gt; 0
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="orge4bca89"&gt;&lt;/a&gt;Primitive roots for a prime number&lt;br&gt;
&lt;div class="outline-text-5" id="text-orge4bca89"&gt;
&lt;p&gt;
For a prime number p, the number b is one of its primitive roots if the set of powers of b (e.g. b&lt;sup&gt;0&lt;/sup&gt;, b&lt;sup&gt;1&lt;/sup&gt;, b&lt;sup&gt;2&lt;/sup&gt;, …) includes all the numbers in the set {1, 2, 3, …. , p-1}, which is the set of all possible remainder except 0.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org29e3a9e"&gt;&lt;/a&gt;The Linear congruential method&lt;br&gt;
&lt;div class="outline-text-5" id="text-org29e3a9e"&gt;
&lt;p&gt;
This method is one of the most popular one. consider the following relation:
X&lt;sub&gt;n+1&lt;/sub&gt;=(a.X&lt;sub&gt;n&lt;/sub&gt;+c) mod m, n≥0
where a, c and m are called multiplier, increment and modulus respectively.
the initial X&lt;sub&gt;0&lt;/sub&gt; is referred to as the seed. Then random number u&lt;sub&gt;n&lt;/sub&gt; is obtained as follows:
u&lt;sub&gt;n&lt;/sub&gt; = X&lt;sub&gt;n&lt;/sub&gt; / m
Clearly if a, c and m are fixed, then different seeds would give different sequences of random numbers. For every run, the seed must be recorder, this is important if the simulation run is to be exactly reproduced/ replicated.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org2fe35d7"&gt;&lt;/a&gt;Prime modulus&lt;br&gt;
&lt;div class="outline-text-5" id="text-org2fe35d7"&gt;
&lt;p&gt;
A multiplicative RNG with a prime modulus will achieve the maximum period if the multiplier a is a primitive root for M.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9510774" class="outline-4"&gt;
&lt;h4 id="org9510774"&gt;Linear Feedback Shift Registers&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9510774"&gt;
&lt;p&gt;
A Linear Feedback Shift Register (LFSR) is a digital device that consists of memory cells  and exclusive-OF (XOR) gates. it can generate a sequence of random binary numbers.
For the four-bit LFSR, its characteristic polynomial is c(x) = 1 + x&lt;sup&gt;3&lt;/sup&gt; + x&lt;sup&gt;4&lt;/sup&gt; and it is constructed as follows:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Since the characteristic polynomial is of degree n = 4, then four memory cells are required&lt;/li&gt;
&lt;li&gt;Each term present in the characteristic polynomial (except x&lt;sup&gt;0&lt;/sup&gt; and x&lt;sup&gt;n&lt;/sup&gt;) corresponds to an XOR gate. In this case, an XOR gate is inserted between memory cell one and zero since this place corresponds to x&lt;sup&gt;3&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;An initial binary number is loaded into the memory cells (i.e. seed)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
Now the LFSR is ready and random binary numbers can be generated.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge233659" class="outline-4"&gt;
&lt;h4 id="orge233659"&gt;Statistical testing of RNG&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge233659"&gt;
&lt;p&gt;
Typically a sequence of random numbers is acepted if it stisfies two conditions: uniformity and independence. Two standard statistical tests are used for checking these two conditions. The first test is referred to as the chi-squared test (χ&lt;sup&gt;2&lt;/sup&gt; test). Thi test ensures that no number occurs more often than the other numbers. This way the numbers are uniformly distributed. 
The second test which is referred to as the poker test ensures that there is no correlation between the successive random numbers. This way the numbers are independent from each other. A RNG is accepted if it passes these two tests. 
&lt;/p&gt;
&lt;/div&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org17f1c5b"&gt;&lt;/a&gt;The Chi-Squared Test&lt;br&gt;
&lt;div class="outline-text-5" id="text-org17f1c5b"&gt;
&lt;p&gt;
This test is mainly used for determining how well the observed data fit the theorethically expected data. The test performed as follows:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Divide the interval [0, 1[ into K non-overlapping subintervals of equal length.&lt;/li&gt;
&lt;li&gt;Determine O&lt;sub&gt;i&lt;/sub&gt; for each subinterval i, where o&lt;sub&gt;i&lt;/sub&gt; is the number of random numbers that fall in subinterval i and 1 ≤ i ≤ K&lt;/li&gt;
&lt;li&gt;Determine E&lt;sub&gt;i&lt;/sub&gt; for each subinterval i, where E&lt;sub&gt;i&lt;/sub&gt; is the expected number of random numbers that should fall in subinterval i&lt;/li&gt;
&lt;li&gt;Compute the Chi-Squared statistic χ&lt;sup&gt;2&lt;/sup&gt; given by the equation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
$ χ&lt;sup&gt;2&lt;/sup&gt; = ∑&lt;sup&gt;K&lt;/sup&gt;&lt;sub&gt;i=1&lt;/sub&gt; \frac{(O_i - E_i)^2}{E_i} $
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;For a level of significance α, if χ&lt;sup&gt;2&lt;/sup&gt; ≤ χ&lt;sup&gt;2&lt;/sup&gt;&lt;sub&gt;K-1,1-α&lt;/sub&gt; then it is concluded that the random numbers in the given sequence are uniformaly distributed with ((1-α) x 100)% level of confidence.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org446b233"&gt;&lt;/a&gt;The Poker Test&lt;br&gt;
&lt;div class="outline-text-5" id="text-org446b233"&gt;
&lt;p&gt;
A sequence of random numbers might be uniformly distributed and yet not random. This because because the random numbers may be related. The poker test is used to detect any such relationship. However, before applying the poker test, the sequence of random numbers must be pre-processed using the following two steps:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Remove the decimal pojnt in every rando number&lt;/li&gt;
&lt;li&gt;Choose the first five digits in every random number. You may need to round the numbers.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Following the above procedure, we will end up with a sequence of five digit numbers. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org7cda982"&gt;&lt;/a&gt;The Spectral Test&lt;br&gt;
&lt;div class="outline-text-5" id="text-org7cda982"&gt;
&lt;p&gt;
The test is used for detecting correlations among random numbers. Basically, the random numbers are grouped into triplets. These triplets are plotted in 3D space.
Planes will emerge if the random numbers are correlted.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>CompSci</category><guid>https://kelianf.github.io/posts/computer-simulation-a-foundational-approach/</guid><pubDate>Fri, 27 Aug 2021 05:53:56 GMT</pubDate></item><item><title>A Hunger Artist</title><link>https://kelianf.github.io/posts/the-hunger-artist/</link><dc:creator>Kelian</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently red A Hunger Artist by Kafka.&lt;/p&gt;
&lt;p&gt;Outside of all possible meaning that one could ascibe to it, from religious to sarcastic passing by autobiographic. My perspective was about the beauty of consuming oneself by only one thing. This might be called apassion or a calling, but the important part is that in this short novel the protagonist does not have a choice, as there was nothing else that he 'enjoyed'.&lt;/p&gt;
&lt;p&gt;Hereunder is the short story. (Ian Johnston translation)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;A Hunger Artist&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the last decades interest in hunger artists has declined considerably. Whereas in earlier days there was good money to be earned putting on major productions of this sort under one’s own management, nowadays that is totally impossible. Those were different times. Back then the hunger artist captured the attention of the entire city. From day to day while the fasting lasted, participation increased. Everyone wanted to see the hunger artist at least daily. During the final days there were people with subscription tickets who sat all day in front of the small barred cage. And there were even viewing hours at night, their impact heightened by torchlight. On fine days the cage was dragged out into the open air, and then the hunger artist was put on display particularly for the children. While for grown-ups the hunger artist was often merely a joke, something they participated in because it was fashionable, the children looked on amazed, their mouths open, holding each other’s hands for safety, as he sat there on scattered straw—spurning a chair—in a black tights, looking pale, with his ribs sticking out prominently, sometimes nodding politely, answering questions with a forced smile, even sticking his arm out through the bars to let people feel how emaciated he was, but then completely sinking back into himself, so that he paid no attention to anything, not even to what was so important to him, the striking of the clock, which was the single furnishing in the cage, merely looking out in front of him with his eyes almost shut and now and then sipping from a tiny glass of water to moisten his lips.&lt;/p&gt;
&lt;p&gt;Apart from the changing groups of spectators there were also constant observers chosen by the public—strangely enough they were usually butchers—who, always three at a time, were given the task of observing the hunger artist day and night, so that he didn’t get something to eat in some secret manner. It was, however, merely a formality, introduced to reassure the masses, for those who understood knew well enough that during the period of fasting the hunger artist would never, under any circumstances, have eaten the slightest thing, not even if compelled by force. The honour of his art forbade it. Naturally, none of the watchers understood that. Sometimes there were nightly groups of watchers who carried out their vigil very laxly, deliberately sitting together in a distant corner and putting all their attention into playing cards there, clearly intending to allow the hunger artist a small refreshment, which, according to their way of thinking, he could get from some secret supplies. Nothing was more excruciating to the hunger artist than such watchers. They depressed him. They made his fasting terribly difficult.&lt;/p&gt;
&lt;p&gt;Sometimes he overcame his weakness and sang during the time they were observing, for as long as he could keep it up, to show people how unjust their suspicions about him were. But that was little help. For then they just wondered among themselves about his skill at being able to eat even while singing. He much preferred the observers who sat down right against the bars and, not satisfied with the dim backlighting of the room, illuminated him with electric flashlights. The glaring light didn’t bother him in the slightest. Generally he couldn’t sleep at all, and he could always doze under any lighting and at any hour, even in an overcrowded, noisy auditorium. With such observers, he was very happily prepared to spend the entire night without sleeping. He was very pleased to joke with them, to recount stories from his nomadic life and then, in turn, to listen their stories—doing everything just to keep them awake, so that he could keep showing them once again that he had nothing to eat in his cage and that he was fasting as none of them could.&lt;/p&gt;
&lt;p&gt;He was happiest, however, when morning came and a lavish breakfast was brought for them at his own expense, on which they hurled themselves with the appetite of healthy men after a hard night’s work without sleep. True, there were still people who wanted to see in this breakfast an unfair means of influencing the observers, but that was going too far, and if they were asked whether they wanted to undertake the observers’ night shift for its own sake, without the breakfast, they excused themselves. But nonetheless they stood by their suspicions.&lt;/p&gt;
&lt;p&gt;However, it was, in general, part of fasting that these doubts were inextricably associated with it. For, in fact, no one was in a position to spend time watching the hunger artist every day and night, so no one could know, on the basis of his own observation, whether this was a case of truly uninterrupted, flawless fasting. The hunger artist himself was the only one who could know that and, at the same time, the only spectator capable of being completely satisfied with his own fasting. But the reason he was never satisfied was something different. Perhaps it was not fasting at all which made him so very emaciated that many people, to their own regret, had to stay away from his performance, because they couldn’t bear to look at him. For he was also so skeletal out of dissatisfaction with himself, because he alone knew something that even initiates didn’t know—how easy it was to fast. It was the easiest thing in the world. About this he did not remain silent, but people did not believe him. At best they thought he was being modest. Most of them, however, believed he was a publicity seeker or a total swindler, for whom, at all events, fasting was easy, because he understood how to make it easy, and then had the nerve to half admit it. He had to accept all that. Over the years he had become accustomed to it. But this dissatisfaction kept gnawing at his insides all the time and never yet—and this one had to say to his credit—had he left the cage of his own free will after any period of fasting.&lt;/p&gt;
&lt;p&gt;The impresario had set the maximum length of time for the fast at forty days—he would never allow the fasting go on beyond that point, not even in the cosmopolitan cities. And, in fact, he had a good reason. Experience had shown that for about forty days one could increasingly whip up a city’s interest by gradually increasing advertising, but that then the people turned away—one could demonstrate a significant decline in popularity. In this respect, there were, of course, small differences among different towns and among different countries, but as a rule it was true that forty days was the maximum length of time.&lt;/p&gt;
&lt;p&gt;So then on the fortieth day the door of the cage—which was covered with flowers—was opened, an enthusiastic audience filled the amphitheatre, a military band played, two doctors entered the cage, in order to take the necessary measurements of the hunger artist, the results were announced to the auditorium through a megaphone, and finally two young ladies arrived, happy about the fact that they were the ones who had just been selected by lot, seeking to lead the hunger artist down a couple of steps out of the cage, where on a small table a carefully chosen hospital meal was laid out. And at this moment the hunger artist always fought back. Of course, he still freely laid his bony arms in the helpful outstretched hands of the ladies bending over him, but he did not want to stand up. Why stop right now after forty days? He could have kept going for even longer, for an unlimited length of time. Why stop right now, when he was in his best form, indeed, not yet even in his best fasting form? Why did people want to rob him of the fame of fasting longer, not just so that he could become the greatest hunger artist of all time, which he probably was already, but also so that he could surpass himself in some unimaginable way, for he felt there were no limits to his capacity for fasting. Why did this crowd, which pretended to admire him so much, have so little patience with him? If he kept going and kept fasting longer, why would they not tolerate it? Then, too, he was tired and felt good sitting in the straw. Now he was supposed to stand up straight and tall and go to eat, something which, when he just imagined it, made him feel nauseous right away. With great difficulty he repressed mentioning this only out of consideration for the women. And he looked up into the eyes of these women, apparently so friendly but in reality so cruel, and shook his excessively heavy head on his feeble neck.&lt;/p&gt;
&lt;p&gt;But then happened what always happened.&lt;/p&gt;
&lt;p&gt;The impresario came and in silence—the music made talking impossible—raised his arms over the hunger artist, as if inviting heaven to look upon its work here on the straw, this unfortunate martyr, something the hunger artist certainly was, only in a completely different sense, then grabbed the hunger artist around his thin waist, in the process wanting with his exaggerated caution to make people believe that here he had to deal with something fragile, and handed him over—not without secretly shaking him a little, so that the hunger artist’s legs and upper body swung back and forth uncontrollably—to the women, who had in the meantime turned as pale as death. At this point, the hunger artist endured everything. His head lay on his chest—it was as if it had inexplicably rolled around and just stopped there—his body was arched back, his legs, in an impulse of self-preservation, pressed themselves together at the knees, but scraped the ground, as if they were not really on the floor but were looking for the real ground, and the entire weight of his body, admittedly very small, lay against one of the women, who appealed for help with flustered breath, for she had not imagined her post of honour would be like this, and then stretched her neck as far as possible, to keep her face from the least contact with the hunger artist, but then, when she couldn’t manage this and her more fortunate companion didn’t come to her assistance but trembled and remained content to hold in front of her the hunger artist’s hand, that small bundle of knuckles, she broke into tears, to the delighted laughter of the auditorium, and had to be relieved by an attendant who had been standing ready for some time. Then came the meal. The impresario put a little food into mouth of the hunger artist, now half unconscious, as if fainting, and kept up a cheerful patter designed to divert attention away from the hunger artist’s condition. Then a toast was proposed to the public, which was supposedly whispered to the impresario by the hunger artist, the orchestra confirmed everything with a great fanfare, people dispersed, and no one had the right to be dissatisfied with the event, no one except the hunger artist—he was always the only one.&lt;/p&gt;
&lt;p&gt;He lived this way, taking small regular breaks, for many years, apparently in the spotlight, honoured by the world, but for all that his mood was usually gloomy, and it kept growing gloomier all the time, because no one understood how to take him seriously. But how was he to find consolation? What was there left for him to wish for? And if a good-natured man who felt sorry for him ever wanted to explain to him that his sadness probably came from his fasting, then it could happen that the hunger artist responded with an outburst of rage and began to shake the bars like an animal, frightening everyone. But the impresario had a way of punishing moments like this, something he was happy to use. He would make an apology for the hunger artist to the assembled public, conceding that the irritability had been provoked only by his fasting, something quite intelligible to well-fed people and capable of excusing the behaviour of the hunger artist without further explanation.&lt;/p&gt;
&lt;p&gt;From there he would move on to speak about the equally hard to understand claim of the hunger artist that he could go on fasting for much longer than he was doing. He would praise the lofty striving, the good will, and the great self-denial no doubt contained in this claim, but then would try to contradict it simply by producing photographs, which were also on sale, for in the pictures one could see the hunger artist on the fortieth day of his fast, in bed, almost dead from exhaustion. Although the hunger artist was very familiar with this perversion of the truth, it always strained his nerves again and was too much for him. What was a result of the premature ending of the fast people were now proposing as its cause! It was impossible to fight against this lack of understanding, against this world of misunderstanding. In good faith he always listened eagerly to the impresario at the bars of his cage, but each time, once the photographs came out, he would let go of the bars and, with a sigh, sink back into the straw, and a reassured public could come up again and view him.&lt;/p&gt;
&lt;p&gt;When those who had witnessed such scenes thought back on them a few years later, often they were unable to understand themselves. For in the meantime that change mentioned above had set it. It happened almost immediately. There may have been more profound reasons for it, but who bothered to discover what they were? At any rate, one day the pampered hunger artist saw himself abandoned by the crowd of pleasure seekers, who preferred to stream to other attractions. The impresario chased around half of Europe one more time with him, to see whether he could still re-discover the old interest here and there. It was all futile. It was as if a secret agreement against the fasting performances had developed everywhere. Naturally, it couldn’t really have happened all at once, and people later remembered some things which in the days of intoxicating success they hadn’t paid sufficient attention to, some inadequately suppressed indications, but now it was too late to do anything to counter them. Of course, it was certain that the popularity of fasting would return once more someday, but for those now alive that was no consolation. What was the hunger artist to do now? A man whom thousands of people had cheered on could not display himself in show booths at small fun fairs. The hunger artist was not only too old to take up a different profession, but was fanatically devoted to fasting more than anything else. So he said farewell to the impresario, an incomparable companion on his life’s road, and let himself be hired by a large circus. In order to spare his own feelings, he didn’t even look at the terms of his contract at all.&lt;/p&gt;
&lt;p&gt;A large circus with its huge number of men, animals, and gimmicks, which are constantly being let go and replenished, can use anyone at any time, even a hunger artist, provided, of course, his demands are modest. Moreover, in this particular case it was not only the hunger artist himself who was engaged, but also his old and famous name.&lt;/p&gt;
&lt;p&gt;In fact, given the characteristic nature of his art, which was not diminished by his advancing age, one could never claim that a worn out artist, who no longer stood at the pinnacle of his ability, wanted to escape to a quiet position in the circus. On the contrary, the hunger artist declared that he could fast just as well as in earlier times—something that was entirely credible. Indeed, he even affirmed that if people would let him do what he wanted—and he was promised this without further ado—he would really now legitimately amaze the world for the first time, an assertion which, however, given the mood of the time, which the hunger artist in his enthusiasm easily overlooked, only brought smiles from the experts.&lt;/p&gt;
&lt;p&gt;However, basically the hunger artist had not forgotten his sense of the way things really were, and he took it as self-evident that people would not set him and his cage up as the star attraction somewhere in the middle of the arena, but would move him outside in some other readily accessible spot near the animal stalls. Huge brightly painted signs surrounded the cage and announced what there was to look at there. During the intervals in the main performance, when the general public pushed out towards the menagerie in order to see the animals, they could hardly avoid moving past the hunger artist and stopping there a moment. They would perhaps have remained with him longer, if those pushing up behind them in the narrow passage way, who did not understand this pause on the way to the animal stalls they wanted to see, had not made a longer peaceful observation impossible. This was also the reason why the hunger artist began to tremble at these visiting hours, which he naturally used to long for as the main purpose of his life. In the early days he could hardly wait for the pauses in the performances. He had looked forward with delight to the crowd pouring around him, until he became convinced only too quickly—and even the most stubborn, almost deliberate self-deception could not hold out against the experience—that, judging by their intentions, most of these people were, again and again without exception, only visiting the menagerie. And this view from a distance still remained his most beautiful moment. For when they had come right up to him, he immediately got an earful from the shouting of the two steadily increasing groups, the ones who wanted to take their time looking at the hunger artist, not with any understanding but on a whim or from mere defiance—for him these ones were soon the more painful—and a second group of people whose only demand was to go straight to the animal stalls.&lt;/p&gt;
&lt;p&gt;Once the large crowds had passed, the late comers would arrive, and although there was nothing preventing these people any more from sticking around for as long as they wanted, they rushed past with long strides, almost without a sideways glance, to get to the animals in time.&lt;/p&gt;
&lt;p&gt;And it was an all-too-rare stroke of luck when the father of a family came by with his children, pointed his finger at the hunger artist, gave a detailed explanation about what was going on here, and talked of earlier years, when he had been present at similar but incomparably more magnificent performances, and then the children, because they had been inadequately prepared at school and in life, always stood around still uncomprehendingly. What was fasting to them? But nonetheless the brightness of the look in their searching eyes revealed something of new and more gracious times coming. Perhaps, the hunger artist said to himself sometimes, everything would be a little better if his location were not quite so near the animal stalls. That way it would be easy for people to make their choice, to say nothing of the fact that he was very upset and constantly depressed by the stink from the stalls, the animals’ commotion at night, the pieces of raw meat dragged past him for the carnivorous beasts, and the roars at feeding time. But he did not dare to approach the administration about it. In any case, he had the animals to thank for the crowds of visitors among whom, here and there, there could be one destined for him. And who knew where they would hide him if he wished to remind them of his existence and, along with that, of the fact that, strictly speaking, he was only an obstacle on the way to the menagerie.&lt;/p&gt;
&lt;p&gt;A small obstacle, at any rate, a constantly diminishing obstacle. People got used to the strange notion that in these times they would want to pay attention to a hunger artist, and with this habitual awareness the judgment on him was pronounced. He might fast as well as he could—and he did—but nothing could save him any more. People went straight past him. Try to explain the art of fasting to anyone! If someone doesn’t feel it, then he cannot be made to understand it. The beautiful signs became dirty and illegible. People tore them down, and no one thought of replacing them. The small table with the number of days the fasting had lasted, which early on had been carefully renewed every day, remained unchanged for a long time, for after the first weeks the staff grew tired of even this small task. And so the hunger artist kept fasting on and on, as he once had dreamed about in earlier times, and he had no difficulty succeeding in achieving what he had predicted back then, but no one was counting the days—no one, not even the hunger artist himself, knew how great his achievement was by this point, and his heart grew heavy. And when once in a while a person strolling past stood there making fun of the old number and talking of a swindle, that was in a sense the stupidest lie which indifference and innate maliciousness could invent, for the hunger artist was not being deceptive—he was working honestly—but the world was cheating him of his reward.&lt;/p&gt;
&lt;p&gt;Many days went by once more, and this, too, came to an end.&lt;/p&gt;
&lt;p&gt;Finally the cage caught the attention of a supervisor, and he asked the attendant why they had left this perfectly useful cage standing here unused with rotting straw inside. Nobody knew, until one man, with the help of the table with the number on it, remembered the hunger artist. They pushed the straw around with a pole and found the hunger artist in there. “Are you still fasting?” the supervisor asked. “When are you finally going to stop?” “Forgive me everything,” whispered the hunger artist. Only the supervisor, who was pressing his ear up against the cage, understood him. “Certainly,” said the supervisor, tapping his forehead with his finger in order to indicate to the spectators the state the hunger artist was in, “we forgive you.” “I always wanted you to admire my fasting,” said the hunger artist. “But we do admire it,” said the supervisor obligingly. “But you shouldn’t admire it,” said the hunger artist. “Well then, we don’t admire it,” said the supervisor, “but why shouldn’t we admire it?” “Because I had to fast. I can’t do anything else,” said the hunger artist. “Just look at you,” said the supervisor, “why can’t you do anything else?” “Because,” said the hunger artist, lifting his head a little and, with his lips pursed as if for a kiss, speaking right into the supervisor’s ear so that he wouldn’t miss anything, “because I couldn’t find a food which I enjoyed. If had found that, believe me, I would not have made a spectacle of myself and would have eaten to my heart’s content, like you and everyone else.” Those were his last words, but in his failing eyes there was the firm, if no longer proud, conviction that he was continuing to fast.&lt;/p&gt;
&lt;p&gt;“All right, tidy this up now,” said the supervisor. And they buried the hunger artist along with the straw. But in his cage they put a young panther. Even for a person with the dullest mind it was clearly refreshing to see this wild animal throwing itself around in this cage, which had been dreary for such a long time. It lacked nothing. Without thinking about it for any length of time, the guards brought the animal food. It enjoyed the taste and never seemed to miss its freedom. This noble body, equipped with everything necessary, almost to the point of bursting, also appeared to carry freedom around with it. That seem to be located somewhere or other in its teeth, and its joy in living came with such strong passion from its throat that it was not easy for spectators to keep watching. But they controlled themselves, kept pressing around the cage, and had no desire to move on.&lt;/p&gt;&lt;/div&gt;</description><category>Book</category><category>Short Stories</category><guid>https://kelianf.github.io/posts/the-hunger-artist/</guid><pubDate>Thu, 24 Jun 2021 03:41:46 GMT</pubDate></item><item><title>Template OrgMode</title><link>https://kelianf.github.io/posts/template-orgmode/</link><dc:creator>Kelian</dc:creator><description>&lt;div id="outline-container-org3e25bcd" class="outline-2"&gt;
&lt;h2 id="org3e25bcd"&gt;Basic Code Block&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3e25bcd"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf064c30" class="outline-3"&gt;
&lt;h3 id="orgf064c30"&gt;Synthax&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf064c30"&gt;
&lt;p&gt;
Before code blocks, to request the creation of a template, you can do:
c-c c-e and then #.
A code block is crated by doing c-c c-, and then selecting 's'.
looks as follow:
'#+begin\textunderscore{src }Language
'#+end\textunderscore{src}
With: Language the programming language wanted to be used
(e.g. emacs-lisp, python, R, julia, etc..).
To execute the code inside: c-c c-c, giving a '#+RESULTS: ' block.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id="outline-container-orga91194e" class="outline-3"&gt;
&lt;h3 id="orga91194e"&gt;Example: Hello World&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga91194e"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hello, World!"&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre class="example"&gt;
Hello, World!
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id="outline-container-org961606e" class="outline-2"&gt;
&lt;h2 id="org961606e"&gt;Code Block use&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org961606e"&gt;
&lt;p&gt;
After the language you can add:
:exports (code/results/both/none)
&lt;/p&gt;

&lt;p&gt;
If want to see from print use ':results output'.
&lt;/p&gt;

&lt;p&gt;
If want to see from return use ':results value'.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdd2c533" class="outline-3"&gt;
&lt;h3 id="orgdd2c533"&gt;Basic blocks&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdd2c533"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb496d7d" class="outline-4"&gt;
&lt;h4 id="orgb496d7d"&gt;Print statement&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgb496d7d"&gt;
&lt;p&gt;
'#+begin\textunderscore{src } python :results output :exports both
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;pre class="example"&gt;
2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org553e780" class="outline-4"&gt;
&lt;h4 id="org553e780"&gt;Return Statement&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org553e780"&gt;
&lt;p&gt;
'#+begin\textunderscore{src }python :results value
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;pre class="example"&gt;
3
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id="outline-container-org8d930dd" class="outline-4"&gt;
&lt;h4 id="org8d930dd"&gt;Function&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org8d930dd"&gt;
&lt;p&gt;
To enter into a code block into edit mode: c-c '.
&lt;/p&gt;

&lt;p&gt;
'#+name: session\textunderscore{test}
&lt;/p&gt;

&lt;p&gt;
'#+begin\textunderscore{src} python :results value :session foo :exports both
&lt;/p&gt;



&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;BasicFunc&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;BasicFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5bc661c" class="outline-4"&gt;
&lt;h4 id="org5bc661c"&gt;Multiple linked blocks&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org5bc661c"&gt;
&lt;p&gt;
'#+name: session\textunderscore{test2}
&lt;/p&gt;

&lt;p&gt;
'#+begin\textunderscore{src} python :session test2 :exports both
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;PrintHelloAnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"Hello and "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
'#+begin\textunderscore{src} python :session test2 :results output :exports both
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"World"&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PrintHelloAnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Hello and World
&lt;/pre&gt;









&lt;p&gt;
'#+begin\textunderscore{src} python :session test2 :results value :exports both
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;AddMonde&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;word2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Monde"&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;PrintHelloAnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;AddMonde&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;pre class="example"&gt;
Hello and Monde 
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org94c6fc6" class="outline-3"&gt;
&lt;h3 id="org94c6fc6"&gt;Table Output&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org94c6fc6"&gt;
&lt;p&gt;
'#+begin\textunderscore{src} python  :exports both :return tabulate(z, headers=z.columns, tablefmt='orgtbl')
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tabulate&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tabulate&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"B"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
|    |        a |        B |
|----+----------+----------|
|  0 | 0.314477 | 0.990273 |
|  1 | 0.46867  | 0.563049 |
|  2 | 0.301536 | 0.392162 |
|  3 | 0.461841 | 0.349585 |
|  4 | 0.67566  | 0.145651 |
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id="outline-container-org87f9bae" class="outline-3"&gt;
&lt;h3 id="org87f9bae"&gt;Graph output&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org87f9bae"&gt;
&lt;p&gt;
To have the matplotlib outplut inline just put this at the
begining: #+STARTUP: inlineimages
&lt;/p&gt;

&lt;p&gt;
'#+begin\textunderscore{src} python :results file :exports both
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savefig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"imgOrgModeTemplate.png"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"imgOrgModeTemplate.png"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://kelianf.github.io/imgOrgModeTemplate.png" alt="nil"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>CompSci</category><category>Emacs</category><guid>https://kelianf.github.io/posts/template-orgmode/</guid><pubDate>Thu, 10 Jun 2021 09:54:50 GMT</pubDate></item><item><title>Trachtenberg</title><link>https://kelianf.github.io/posts/trachtenberg/</link><dc:creator>Kelian</dc:creator><description>&lt;div id="outline-container-org02d146c" class="outline-2"&gt;
&lt;h2 id="org02d146c"&gt;Trachtenberg Method or how to overcomplicate multiplications&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org02d146c"&gt;
&lt;p&gt;
The Trachtenberg system is a method for rapid mental calculation developped by Jakow Trachtenberg.
&lt;/p&gt;

&lt;p&gt;
Here below we represent the algos for multiplication going from 5 to 12.
So these 'hacks' should be used for accelerating mental calculations and help making sure you know at least the multiplication table for the first 11 numbers
(Which is the very least you should know according to A. Borovik, whcih recommend to know this, as well as the square of positive integers up to 31&lt;sup&gt;2&lt;/sup&gt;, the cubes of positive integer up to 11&lt;sup&gt;3&lt;/sup&gt; and the powers of 2 up to 2&lt;sup&gt;10&lt;/sup&gt;).
&lt;/p&gt;

&lt;p&gt;
But What is certain, is that these method was never intendend to be used with a numerical implementation, which since any computer can do any of these multiplication efficiently would be stupid to implement.. so let's do it.
&lt;/p&gt;
&lt;/div&gt;


&lt;div id="outline-container-org3115aba" class="outline-3"&gt;
&lt;h3 id="org3115aba"&gt;Multiplication by 11&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org3115aba"&gt;
&lt;p&gt;
Probably the most known solution, it basically is putting the addition of the two 'chiffre' of a 'nombre' inbweeten them. (Pardon my french, but the difference between digit and numbers in that language). 
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MultiplyBy11&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
	&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"0"&lt;/span&gt;
	&lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MultiplyBy11_Bis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"0"&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6573&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;72303&lt;/span&gt;

&lt;span class="n"&gt;MultiplyBy11&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;72303&lt;/span&gt;

&lt;span class="n"&gt;MultiplyBy11_Bis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;72303&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-orgb0659f7" class="outline-3"&gt;
&lt;h3 id="orgb0659f7"&gt;Multiplication by 12&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb0659f7"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MultiplyBy12&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
	&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Only difference is here&lt;/span&gt;
	&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"0"&lt;/span&gt;
	&lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MultiplyBy12_Bis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"0"&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3729&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;44748&lt;/span&gt;

&lt;span class="n"&gt;MultiplyBy12&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;44748&lt;/span&gt;

&lt;span class="n"&gt;MultiplyBy12_Bis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;44748&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org1f67538" class="outline-3"&gt;
&lt;h3 id="org1f67538"&gt;Multiplication by 10&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1f67538"&gt;
&lt;p&gt;
Yeah, what I am doing is stupid, but not that stupid.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org21e67f9" class="outline-3"&gt;
&lt;h3 id="org21e67f9"&gt;Multiplication by 5&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org21e67f9"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MultiplyBy5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
	&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
	&lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8265&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;41325&lt;/span&gt;

&lt;span class="n"&gt;MultiplyBy5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;41325&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;MultiplyBy5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xyz&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;xyz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xyz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;"0"&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s2"&gt;"5"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org258d522" class="outline-3"&gt;
&lt;h3 id="org258d522"&gt;Multiplication by 6&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org258d522"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MultiplyBy6&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
	&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
	&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
	&lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8374561&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;50247366&lt;/span&gt;

&lt;span class="n"&gt;MultiplyBy6&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;50247366&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org518eb6a" class="outline-3"&gt;
&lt;h3 id="org518eb6a"&gt;Multiplication by 7&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org518eb6a"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MultiplyBy7&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
	&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
	&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
	&lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;839138&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5873966&lt;/span&gt;

&lt;span class="n"&gt;MultiplyBy7&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5873966&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Multiplication by 8
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MultiplyBy8&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
	&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
	&lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;
	&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;52635&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;421080&lt;/span&gt;

&lt;span class="n"&gt;MultiplyBy8&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;421080&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Multiplication by 9
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;MultiplyBy9&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Cache&lt;/span&gt;
	&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
	    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;Cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
	&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
	&lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;
	&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Cache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6428&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;57852&lt;/span&gt;

&lt;span class="n"&gt;MultiplyBy9&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;57852&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>Mathematics</category><guid>https://kelianf.github.io/posts/trachtenberg/</guid><pubDate>Sun, 09 May 2021 03:09:13 GMT</pubDate></item><item><title>Test</title><link>https://kelianf.github.io/posts/test/</link><dc:creator>Kelian</dc:creator><description>&lt;p&gt;
Write your post here.
&lt;/p&gt;

&lt;p&gt;
This is a test for my first blog using Nikola on Emacs org-mode.
Let's see how it goes.
&lt;/p&gt;</description><guid>https://kelianf.github.io/posts/test/</guid><pubDate>Mon, 01 Mar 2021 03:36:22 GMT</pubDate></item></channel></rss>